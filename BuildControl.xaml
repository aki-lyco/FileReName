<UserControl x:Class="Explore.BuildControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:build="clr-namespace:Explore.Build"
             mc:Ignorable="d"
             d:DesignWidth="1100" d:DesignHeight="700">

	<!-- コメントは連続ハイフンを含めない（== を使用） -->
	<UserControl.Resources>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

		<Style x:Key="ToolbarButton" TargetType="Button">
			<Setter Property="Margin" Value="4"/>
			<Setter Property="Padding" Value="8,4"/>
			<Setter Property="MinWidth" Value="110"/>
		</Style>

		<!-- 設計タブ：カテゴリツリー -->
		<HierarchicalDataTemplate DataType="{x:Type build:CategoryNode}" ItemsSource="{Binding Children}">
			<StackPanel Orientation="Horizontal" Margin="2">
				<TextBlock Text="📁" Margin="0,0,6,0" VerticalAlignment="Center"/>
				<TextBlock Text="{Binding Display}" VerticalAlignment="Center"/>
				<TextBlock Text=" 🔒" Foreground="DarkGray" Margin="6,0,0,0"
                           Visibility="{Binding IsRequired, Converter={StaticResource BooleanToVisibilityConverter}}"/>
			</StackPanel>
		</HierarchicalDataTemplate>

		<!-- DryRun: フォルダノード（Items = 下位フォルダ + ファイル） -->
		<HierarchicalDataTemplate DataType="{x:Type build:DryNode}" ItemsSource="{Binding Items}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock Text="{Binding Name}" VerticalAlignment="Center">
					<TextBlock.Style>
						<Style TargetType="TextBlock">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsNew}" Value="True">
									<Setter Property="FontStyle" Value="Italic"/>
									<Setter Property="Foreground" Value="Gray"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<Border Grid.Column="1" Margin="8,0,0,0" Padding="6,2"
                        Background="#1F3A8C" CornerRadius="10" VerticalAlignment="Center">
					<TextBlock Text="{Binding AggregateCount}" Foreground="White" FontWeight="SemiBold"/>
				</Border>
			</Grid>
		</HierarchicalDataTemplate>

		<!-- DryRun: ファイル行（リーフ） -->
		<DataTemplate DataType="{x:Type build:DryLeaf}">
			<DockPanel Margin="0,2">
				<TextBlock Text="📄" Margin="0,0,6,0" VerticalAlignment="Center"/>
				<StackPanel>
					<TextBlock Text="{Binding Name}" />
					<TextBlock Text="{Binding SourceFullPath}"
                               Foreground="#666" FontSize="11"
                               TextTrimming="CharacterEllipsis"/>
				</StackPanel>
			</DockPanel>
		</DataTemplate>

		<!-- TreeViewItem を横いっぱいに -->
		<Style TargetType="TreeViewItem">
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		</Style>
	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<!-- == ツールバー == -->
		<ToolBarTray Grid.Row="0">
			<ToolBar>
				<TextBlock Text="保存先: " VerticalAlignment="Center" Margin="4,0"/>
				<TextBlock Text="{Binding BaseDisplay, Mode=OneWay}" VerticalAlignment="Center"/>
				<Separator/>
				<Button Style="{StaticResource ToolbarButton}" Content="保存先フォルダを選択" Command="{Binding PickBasePath}"/>
				<Button Style="{StaticResource ToolbarButton}" Content="自動取り込み" Command="{Binding AutoImportFromBase}"/>
				<Separator/>
				<Button Style="{StaticResource ToolbarButton}" Content="検証" Command="{Binding ValidateCategories}"/>
			</ToolBar>
		</ToolBarTray>

		<!-- == 本体 == -->
		<Grid Grid.Row="1">
			<!-- == SelectTargets 画面 == -->
			<Grid x:Name="SelectView">
				<Grid.Style>
					<Style TargetType="Grid">
						<Setter Property="Visibility" Value="Collapsed"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding State}" Value="{x:Static build:BuildState.SelectTargets}">
								<Setter Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>

				<Border Margin="12" BorderBrush="#DDD" BorderThickness="1" CornerRadius="8" Padding="24" Background="#FAFAFA">
					<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="640">
						<TextBlock Text="分類対象を追加してください" FontSize="18" FontWeight="Bold" Margin="0,0,0,12"/>
						<TextBlock Text="ファイル/フォルダをここにドラッグ＆ドロップするか、ボタンから選択します。" Margin="0,0,0,16"/>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Content="ファイルを追加" Margin="4" Padding="12,6" Click="OnAddFilesClick"/>
							<Button Content="フォルダを追加" Margin="4" Padding="12,6" Click="OnAddFolderClick"/>
							<Button Content="次へ（設計へ）" Margin="16,4" Padding="16,6" Command="{Binding DecideTargets}"/>
						</StackPanel>

						<!-- ▼ 選択済み一覧 -->
						<GroupBox Margin="0,24,0,0">
							<GroupBox.Header>
								<DockPanel LastChildFill="False">
									<TextBlock Text="選択済み" VerticalAlignment="Center"/>
									<StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
										<Button Content="選択を削除" Click="OnRemoveSelectedTargets" Margin="6,0,0,0" Padding="8,2"/>
										<Button Content="クリア"     Click="OnClearTargets"          Margin="6,0,0,0" Padding="8,2"/>
									</StackPanel>
								</DockPanel>
							</GroupBox.Header>

							<ListBox x:Name="SelectedList"
									 ItemsSource="{Binding SelectedTargets}"
									 Height="220"
									 SelectionMode="Extended"
									 KeyDown="SelectedList_KeyDown">
								<ListBox.ContextMenu>
									<ContextMenu>
										<MenuItem Header="選択を削除" Click="OnRemoveSelectedTargets"/>
										<MenuItem Header="全クリア"   Click="OnClearTargets"/>
									</ContextMenu>
								</ListBox.ContextMenu>
							</ListBox>
						</GroupBox>
						<!-- ▲ 選択済み一覧 -->
					</StackPanel>
				</Border>
			</Grid>

			<!-- == Design 画面 == -->
			<Grid x:Name="DesignView">
				<Grid.Style>
					<Style TargetType="Grid">
						<Setter Property="Visibility" Value="Collapsed"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding State}" Value="{x:Static build:BuildState.Design}">
								<Setter Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="3*"/>
					<ColumnDefinition Width="4*"/>
					<ColumnDefinition Width="4*"/>
				</Grid.ColumnDefinitions>

				<!-- 左：ツリー -->
				<Border Grid.Column="0" Margin="8" BorderBrush="#DDD" BorderThickness="1" CornerRadius="6">
					<DockPanel>
						<StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="8">
							<TextBlock Text="カテゴリ（仮想）" FontWeight="Bold" VerticalAlignment="Center"/>
							<Button Content="＋ ルート直下に追加" Margin="12,0,0,0" Command="{Binding AddRootCategory}"/>
							<Button Content="＋ 子を追加" Margin="6,0,0,0" Command="{Binding AddCategory}"/>
						</StackPanel>

						<TreeView x:Name="Tree"
                                  ItemsSource="{Binding Root.Children}"
                                  SelectedItemChanged="Tree_SelectedItemChanged"
                                  AllowDrop="True">
							<TreeView.Resources>
								<ContextMenu x:Key="TreeContextMenu">
									<MenuItem Header="子を追加" Command="{Binding DataContext.AddCategory, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
									<MenuItem Header="名前変更（表示名→相対に反映）" Command="{Binding DataContext.RenameCategory, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
									<MenuItem Header="削除" Command="{Binding DataContext.RemoveCategory, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
									<Separator/>
									<MenuItem Header="このフォルダを開く" Command="{Binding DataContext.OpenCategoryInExplorer, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
								</ContextMenu>
							</TreeView.Resources>
							<TreeView.ItemContainerStyle>
								<Style TargetType="TreeViewItem">
									<Setter Property="ContextMenu" Value="{StaticResource TreeContextMenu}"/>
								</Style>
							</TreeView.ItemContainerStyle>
						</TreeView>
					</DockPanel>
				</Border>

				<!-- 中央：詳細 -->
				<Border Grid.Column="1" Margin="8" BorderBrush="#DDD" BorderThickness="1" CornerRadius="6" Padding="8">
					<Grid>
						<Grid.Style>
							<Style TargetType="Grid">
								<Setter Property="IsEnabled" Value="True"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding SelectedCategory}" Value="{x:Null}">
										<Setter Property="IsEnabled" Value="False"/>
									</DataTrigger>
									<!-- 未分類は編集不可 -->
									<DataTrigger Value="True">
										<DataTrigger.Binding>
											<Binding Path="SelectedCategory.IsRequired" TargetNullValue="False" FallbackValue="False"/>
										</DataTrigger.Binding>
										<Setter Property="IsEnabled" Value="False"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Grid.Style>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<TextBlock Text="詳細" FontWeight="Bold" FontSize="14"/>

						<!-- 表示名 -->
						<Grid Grid.Row="1" Margin="0,8,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<TextBlock Text="表示名:" VerticalAlignment="Center" Margin="0,0,8,0"/>
							<TextBox Grid.Column="1"
                                     Text="{Binding SelectedCategory.Display, UpdateSourceTrigger=PropertyChanged, TargetNullValue='', FallbackValue=''}"/>
						</Grid>

						<!-- 相対パス（読み取り専用） -->
						<Grid Grid.Row="2" Margin="0,8,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<TextBlock Text="相対パス:" VerticalAlignment="Center" Margin="0,0,8,0"/>
							<TextBox Grid.Column="1"
                                     IsReadOnly="True"
                                     Background="Transparent"
                                     BorderBrush="#CCC"
                                     Text="{Binding SelectedCategory.RelPath, Mode=OneWay, TargetNullValue='', FallbackValue=''}"/>
						</Grid>

						<!-- キーワード -->
						<Grid Grid.Row="3" Margin="0,8,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<TextBlock Text="キーワード(JSONまたは,区切り):" VerticalAlignment="Center" Margin="0,0,8,0"/>
							<TextBox Grid.Column="1"
                                     Text="{Binding SelectedCategory.KeywordsJson, UpdateSourceTrigger=PropertyChanged, TargetNullValue='', FallbackValue=''}"/>
						</Grid>

						<!-- 拡張子/AIヒント -->
						<Grid Grid.Row="4" Margin="0,8,0,0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>

							<TextBlock Grid.Row="0" Grid.Column="0" Text="拡張子フィルタ:" VerticalAlignment="Center" Margin="0,0,8,0"/>
							<TextBox   Grid.Row="0" Grid.Column="1"
                                       Text="{Binding SelectedCategory.ExtFilter, UpdateSourceTrigger=PropertyChanged, TargetNullValue='', FallbackValue=''}"/>

							<TextBlock Grid.Row="1" Grid.Column="0" Text="AIヒント:" VerticalAlignment="Center" Margin="0,8,8,0"/>
							<TextBox   Grid.Row="1" Grid.Column="1"
                                       Text="{Binding SelectedCategory.AiHint, UpdateSourceTrigger=PropertyChanged, TargetNullValue='', FallbackValue=''}"/>
						</Grid>
					</Grid>
				</Border>

				<!-- 右：選択対象一覧 -->
				<Border Grid.Column="2" Margin="8" BorderBrush="#DDD" BorderThickness="1" CornerRadius="6" Padding="8">
					<StackPanel>
						<TextBlock Text="選択対象（ファイル/フォルダ）" FontWeight="Bold"/>
						<ListBox x:Name="SelectedListDesign"
								 ItemsSource="{Binding SelectedTargets}"
								 Height="360"
								 SelectionMode="Extended"
								 KeyDown="SelectedList_KeyDown">
							<ListBox.ContextMenu>
								<ContextMenu>
									<MenuItem Header="選択を削除" Click="OnRemoveSelectedTargets"/>
									<MenuItem Header="全クリア"   Click="OnClearTargets"/>
								</ContextMenu>
							</ListBox.ContextMenu>
						</ListBox>

						<TextBlock Text="しきい値" Margin="0,12,0,4"/>
						<Slider Minimum="0" Maximum="1" Value="{Binding AiThreshold}" TickFrequency="0.05" IsSnapToTickEnabled="True"/>
						<StackPanel Orientation="Horizontal" Margin="0,8,0,0">
							<Button Content="適用テスト（ドライラン）" Command="{Binding RunDryRun}" Margin="0,0,8,0"/>
							<Button Content="戻る" Command="{Binding BackToSelectTargets}"/>
						</StackPanel>
					</StackPanel>
				</Border>
			</Grid>

			<!-- == DryRunPreview 画面（新レイアウト） == -->
			<Border x:Name="DryRunView">
				<Border.Style>
					<Style TargetType="Border">
						<Setter Property="Visibility" Value="Collapsed"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding State}" Value="{x:Static build:BuildState.DryRunPreview}">
								<Setter Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Border.Style>

				<!-- ヘッダー / 本文（2カラム） / フッター -->
				<Grid Margin="12">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="2*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>

					<!-- Header Summary -->
					<Border Grid.Row="0" Grid.ColumnSpan="2" BorderBrush="#DDD" BorderThickness="1" CornerRadius="6" Padding="10" Background="#FAFAFA" Margin="0,0,0,10">
						<DockPanel>
							<TextBlock DockPanel.Dock="Left" Text="DryRunプレビュー" FontSize="16" FontWeight="Bold" />
							<StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
								<TextBlock Text="{Binding Plan.Stats.CreateCount, StringFormat=作成予定フォルダ: {0}}" Margin="8,0"/>
								<TextBlock Text="{Binding Plan.Stats.MoveCount, StringFormat=移動: {0}}" Margin="8,0"/>
								<TextBlock Text="{Binding Plan.Stats.UnresolvedCount, StringFormat=未分類: {0}}" Margin="8,0"/>
								<TextBlock Text="{Binding Plan.Stats.ErrorCount, StringFormat=エラー: {0}}" Margin="8,0"/>
							</StackPanel>
						</DockPanel>
					</Border>

					<!-- 左：結果ツリー（ルート＝保存先） -->
					<Border Grid.Row="1" Grid.Column="0" BorderBrush="#DDD" BorderThickness="1" CornerRadius="6" Padding="10" Background="#FFFFFF" Margin="0,0,10,0">
						<DockPanel>
							<TextBlock DockPanel.Dock="Top" Text="結果ツリー（ルート＝保存先）" FontWeight="Bold" Margin="0,0,0,6"/>
							<TreeView ItemsSource="{Binding DryTree}">
								<TreeView.ItemContainerStyle>
									<Style TargetType="TreeViewItem">
										<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
									</Style>
								</TreeView.ItemContainerStyle>
							</TreeView>
						</DockPanel>
					</Border>

					<!-- 右：未分類/エラー -->
					<Border Grid.Row="1" Grid.Column="1" BorderBrush="#DDD" BorderThickness="1" CornerRadius="6" Padding="10" Background="#FFFFFF">
						<StackPanel>
							<TextBlock Text="未分類 / エラー" FontWeight="Bold"/>
							<Expander Header="Unresolved（未分類）" IsExpanded="True" Margin="0,6,0,0">
								<ItemsControl ItemsSource="{Binding DryUnresolvedList}">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="{x:Type build:DryIssue}">
											<Border Margin="0,4,0,4" Padding="8" Background="#F5F7FB" CornerRadius="6">
												<StackPanel>
													<TextBlock Text="{Binding Path}"/>
													<TextBlock Text="{Binding Reason}" Foreground="#666" FontSize="12"/>
												</StackPanel>
											</Border>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</Expander>

							<Expander Header="Errors（エラー）" IsExpanded="True" Margin="0,8,0,0">
								<ItemsControl ItemsSource="{Binding DryErrorsList}">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="{x:Type build:DryIssue}">
											<Border Margin="0,4,0,4" Padding="8" Background="#FFF5F5" CornerRadius="6" BorderBrush="#DC2626" BorderThickness="1">
												<StackPanel>
													<TextBlock Text="{Binding Path}" Foreground="#7A1C1C"/>
													<TextBlock Text="{Binding Reason}" Foreground="#A33" FontSize="12"/>
												</StackPanel>
											</Border>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</Expander>
						</StackPanel>
					</Border>

					<!-- フッター -->
					<StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
						<Button Content="コピー" Command="{Binding CopyPlanSummary}" Margin="0,0,8,0"/>
						<Button Content="編集（戻る）" Command="{Binding BackToDesign}" Margin="0,0,8,0"/>
						<Button Content="確定して適用" Command="{Binding ApplyPlan}" Background="#2563EB" Foreground="White"/>
					</StackPanel>
				</Grid>
			</Border>
		</Grid>

		<!-- == ステータスバー == -->
		<StatusBar Grid.Row="2">
			<StatusBarItem>
				<TextBlock Text="{Binding Status}"/>
			</StatusBarItem>
		</StatusBar>
	</Grid>
</UserControl>
