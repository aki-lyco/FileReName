<UserControl x:Class="Explore.ChatControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Explore"
             mc:Ignorable="d"
             d:DesignWidth="900" d:DesignHeight="600">

	<!-- ========= Resources ========= -->
	<UserControl.Resources>
		<!-- バブルの出し分けに使う -->
		<local:RoleToVisibilityConverter x:Key="RoleToVisibility"/>

		<!-- ユーザーバブル -->
		<Style x:Key="UserBubbleBorder" TargetType="Border">
			<Setter Property="CornerRadius" Value="10"/>
			<Setter Property="Padding" Value="10"/>
			<Setter Property="Background" Value="#DCF8C6"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="Margin" Value="50,5,0,5"/>
			<Setter Property="MaxWidth" Value="720"/>
		</Style>

		<!-- アシスタントバブル -->
		<Style x:Key="AIBubbleBorder" TargetType="Border">
			<Setter Property="CornerRadius" Value="10"/>
			<Setter Property="Padding" Value="10"/>
			<Setter Property="Background" Value="#E6E6E6"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="Margin" Value="0,5,50,5"/>
			<Setter Property="MaxWidth" Value="720"/>
		</Style>

		<!-- ChatMessage を左右の吹き出しに振り分けるテンプレート（従来どおり） -->
		<DataTemplate DataType="{x:Type local:ChatMessage}">
			<Grid>
				<!-- User -->
				<Border Style="{StaticResource UserBubbleBorder}"
                        Visibility="{Binding Role, Converter={StaticResource RoleToVisibility}, ConverterParameter=user}">
					<TextBlock Text="{Binding Content}" TextWrapping="Wrap" FontSize="14"/>
				</Border>
				<!-- Assistant -->
				<Border Style="{StaticResource AIBubbleBorder}"
                        Visibility="{Binding Role, Converter={StaticResource RoleToVisibility}, ConverterParameter=assistant}">
					<TextBlock Text="{Binding Content}" TextWrapping="Wrap" FontSize="14"/>
				</Border>
			</Grid>
		</DataTemplate>

		<!-- ＝＝＝ 検索結果カード & テンプレートセレクタ ＝＝＝ -->
		<DataTemplate x:Key="SearchCards" DataType="{x:Type local:ChatMessage}">
			<StackPanel Margin="8" HorizontalAlignment="Left" Width="720">
				<TextBlock Text="検索結果" FontWeight="SemiBold" Margin="4,0,0,6"/>
				<ItemsControl ItemsSource="{Binding Results}">
					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="{x:Type local:SearchResultItem}">
							<Border BorderBrush="#DDD" BorderThickness="1" CornerRadius="10"
                                    Padding="10" Margin="0,6,0,6" Background="White">
								<StackPanel>
									<DockPanel Margin="0,0,0,4">
										<TextBlock Text="{Binding Index, StringFormat={}{0}. }"
                                                   DockPanel.Dock="Left" FontWeight="SemiBold" Foreground="#666"/>
										<TextBlock Text="{Binding Name}"
                                                   FontWeight="Bold" FontSize="14"
                                                   TextTrimming="CharacterEllipsis"/>
									</DockPanel>

									<TextBlock Text="{Binding Parent}"
                                               Foreground="#777" FontSize="12"
                                               TextTrimming="CharacterEllipsis"/>

									<StackPanel Orientation="Horizontal" Margin="0,4,0,8">
										<TextBlock Text="{Binding SizeText}" Foreground="#777" FontSize="12" Margin="0,0,12,0"/>
										<TextBlock Text="{Binding MtimeText}" Foreground="#777" FontSize="12"/>
									</StackPanel>

									<!-- 埋め込みリンク：場所を開く -->
									<TextBlock>
										<Hyperlink Click="ResultOpen_Click" Tag="{Binding Path}">
											場所を開く
										</Hyperlink>
									</TextBlock>
								</StackPanel>
							</Border>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</StackPanel>
		</DataTemplate>

		<!-- IsSearchResult=true のメッセージだけ SearchCards を適用 -->
		<local:ChatTemplateSelector x:Key="ChatTmpl"
                                    SearchTemplate="{StaticResource SearchCards}" />
	</UserControl.Resources>

	<!-- ========= Layout ========= -->
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<!-- Toolbar -->
			<RowDefinition Height="*"/>
			<!-- Messages -->
			<RowDefinition Height="Auto"/>
			<!-- Input -->
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="2*"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>

		<!-- ===== Toolbar ===== -->
		<Grid Grid.Row="0" Grid.ColumnSpan="3" Margin="8,8,8,4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<!-- 左：タイトル -->
			<StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center">
				<TextBlock Text="Chat" FontSize="16" FontWeight="SemiBold" Foreground="#444" Margin="4,0,0,0"/>
			</StackPanel>

			<!-- 右：操作群（チャット／デバッグ／検索）  ※幅が足りない時は自動で折り返し -->
			<WrapPanel Grid.Column="1" VerticalAlignment="Center" ItemHeight="32">
				<ToggleButton x:Name="ChatToggle" Content="チャット" MinWidth="84" Margin="0,0,8,0"
                              Click="ChatToggle_Click" IsChecked="True"/>
				<ToggleButton x:Name="DebugToggle" Content="デバッグ" MinWidth="84" Margin="0,0,8,0"
                              Click="DebugToggle_Click" IsChecked="False"/>
				<!-- 検索はUIのみ。処理は暫定で NlpToggle_Click に接続 -->
				<ToggleButton x:Name="NlpToggle" Content="検索" MinWidth="84"
                              Click="NlpToggle_Click" IsChecked="True"/>
			</WrapPanel>
		</Grid>

		<!-- ===== Messages ===== -->
		<ScrollViewer x:Name="ChatScrollViewer"
                      Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                      VerticalScrollBarVisibility="Auto"
                      ScrollChanged="ChatScrollViewer_ScrollChanged"
                      Padding="0,8,0,45">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="2*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<StackPanel Grid.Column="1">
					<ItemsControl x:Name="ChatList"
                                  ItemTemplateSelector="{StaticResource ChatTmpl}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
					</ItemsControl>

					<!-- 最下部に少し余白 -->
					<Rectangle Height="100" Fill="Transparent"/>
				</StackPanel>
			</Grid>
		</ScrollViewer>

		<!-- 中央下に浮かせる「下までスクロール」ボタン -->
		<Button x:Name="ScrollDownButton" Click="ScrollDownButton_Click"
                Grid.Row="1" Grid.Column="1"
                FontFamily="Segoe Fluent Icons" Content="&#xF0AE;" FontSize="14"
                Width="32" Height="32" Margin="0,0,0,10"
                Visibility="Collapsed"
                HorizontalAlignment="Center" VerticalAlignment="Bottom" Cursor="Hand">
			<Button.Template>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Ellipse Fill="White" Stroke="#FFE6E6E6"/>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Button.Template>
		</Button>

		<!-- ===== Input（見た目はそのまま。MinWidthだけ縮小） ===== -->
		<Border Grid.Row="2" Grid.Column="1" Padding="10" Margin="0,6,0,16" CornerRadius="28"
                Background="White" BorderThickness="1" BorderBrush="#FFB0B0B0"
                MouseDown="InputFocus" Cursor="IBeam"
                MaxHeight="420" MaxWidth="1280" MinWidth="280">
			<Border.Effect>
				<DropShadowEffect BlurRadius="6" ShadowDepth="3" Direction="270" Opacity="0.1"/>
			</Border.Effect>

			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<!-- 入力テキストボックス（Enter送信／Shift+Enter改行） -->
				<TextBox x:Name="InputBox"
                         Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                         PreviewKeyDown="EnterSend"
                         MinHeight="48" MinWidth="100"
                         FontSize="16" Padding="0,12,0,12"
                         BorderThickness="0" Margin="12,0,12,0"
                         TextWrapping="Wrap" AcceptsReturn="True" />

				<!-- 左：＋（今は見た目だけ。必要ならファイル添付に改造可） -->
				<Button FontFamily="Segoe Fluent Icons" Content="&#xF8AA;" FontSize="14"
                        Width="36" Height="36" Grid.Row="1" Grid.Column="0"
                        Click="SendButton_Click" Cursor="Hand" ToolTip="（サンプル）送信">
					<Button.Template>
						<ControlTemplate TargetType="Button">
							<Grid>
								<Ellipse x:Name="circle" Fill="White"/>
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="circle" Property="Fill" Value="#FFFAFAFA"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Button.Template>
				</Button>

				<!-- 右：送信（黒い丸に白い矢印） -->
				<Button x:Name="SendButton"
                        FontFamily="Segoe Fluent Icons" Content="&#xF0AD;" FontSize="14" Foreground="White"
                        Width="36" Height="36" Grid.Row="1" Grid.Column="2"
                        Click="SendButton_Click" Cursor="Hand" ToolTip="送信">
					<Button.Template>
						<ControlTemplate TargetType="Button">
							<Grid>
								<Ellipse x:Name="circle" Fill="Black"/>
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="circle" Property="Fill" Value="#FF4C4C4C"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Button.Template>
				</Button>
			</Grid>
		</Border>
	</Grid>
</UserControl>
